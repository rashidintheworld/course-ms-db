CREATE TABLE departments
(
    department_id   SERIAL PRIMARY KEY,
    department_name VARCHAR(255),
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active          INT       DEFAULT 1
);

INSERT INTO departments (department_name)
VALUES ('Database systems');
INSERT INTO departments (department_name)
VALUES ('Information security');
INSERT INTO departments (department_name)
VALUES ('Multimedia technologies');

select *
from departments
where active = 1;

update departments
set active = 0
where department_id = 1;

CREATE TABLE teachers
(
    teacher_id               SERIAL PRIMARY KEY,
    teacher_name             VARCHAR(50),
    teacher_surname          VARCHAR(50),
    teacher_age              INT,
    teacher_gender           VARCHAR(10),
    teacher_email            VARCHAR(20) UNIQUE,
    teacher_number           VARCHAR(20) UNIQUE,
    teacher_home_number      VARCHAR(20),
    teacher_emergency_number VARCHAR(20),
    department_id            INT REFERENCES departments (department_id),
    teacher_experience_years INT,
    teacher_salary           DECIMAL(10, 2),
    created_at               TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at               TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active                   INT       DEFAULT 1
);
/*
Department ve teachers arasi - one to many
*/
select teacher_age*5 from teachers;

INSERT INTO teachers (teacher_name, teacher_surname, teacher_email, teacher_number, department_id,
                      teacher_experience_years, teacher_salary)
VALUES ('Hayat', 'Huseynova', 'hayat@example.com', '123456', 3, 5, 1500.00);
INSERT INTO teachers (teacher_name, teacher_surname, teacher_email, teacher_number, department_id,
                      teacher_experience_years, teacher_salary)
VALUES ('Samira', 'Aliyeva', 'samira@example.com', '789012', 1, 3, 1500.00);
INSERT INTO teachers (teacher_name, teacher_surname, teacher_email, teacher_number, department_id,
                      teacher_experience_years, teacher_salary)
VALUES ('Camaladdin', 'Nuraliyev', 'infosec@example.com', '345678', 2, 7, 1000.00);

select *
from teachers;

select teacher_name, teacher_surname, teacher_experience_years, teacher_salary
from teachers
order by teacher_salary desc;

select *
from teachers
where teacher_experience_years >= 5;

CREATE TABLE students
(
    student_id               SERIAL PRIMARY KEY,
    student_name             VARCHAR(50),
    student_surname          VARCHAR(50),
    student_age              INT,
    student_gender           VARCHAR(20),
    student_email            VARCHAR(20),
    student_cell_number      VARCHAR(20) UNIQUE,
    student_home_number      VARCHAR(20),
    student_emergency_number VARCHAR(20),
    student_class            VARCHAR(10),
    created_at               TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at               TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active                   INT       DEFAULT 1
);

INSERT INTO students (student_name, student_surname, student_age, student_gender, student_email, student_cell_number,
                      student_home_number, student_emergency_number, student_class)
VALUES ('Rashid', 'Teymurlu', 20, 'Male', 'rashid@example.com', '123456789', '987654321', '111111111', 'Grade 10');
INSERT INTO students (student_name, student_surname, student_age, student_gender, student_email, student_cell_number,
                      student_home_number, student_emergency_number, student_class)
VALUES ('Omar', 'Ismayilov', 18, 'Male', 'omar@example.com', '987654321', '123456789', '222222222', 'Grade 11');
INSERT INTO students (student_name, student_surname, student_age, student_gender, student_email, student_cell_number,
                      student_home_number, student_emergency_number, student_class)
VALUES ('Vusal', 'Balakishiyev', 19, 'Male', 'vusal@example.com', '555555555', '666666666', '333333333', 'Grade 11');

select *
from students;

select student_name
from students
where student_age > 19;

SELECT *
FROM Students
WHERE student_name LIKE '%d%';

CREATE TABLE lessons
(
    lesson_id     SERIAL PRIMARY KEY,
    lesson_name   VARCHAR(255),
    created_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active        INT       DEFAULT 1,
    department_id INT       DEFAULT 1
);
/*
Student ve lessons arasi - many to many
*/
select *
from lessons;
SELECT *
FROM lessons
WHERE lesson_name IN ('Excel', 'Photoshop');

CREATE TABLE assignments
(
    assignment_id SERIAL PRIMARY KEY,
    student_id    INT REFERENCES students (student_id),
    teacher_id    INT REFERENCES teachers (teacher_id),
    lesson_id     INT REFERENCES lessons (lesson_id),
    exam_result   DECIMAL(5, 2),
    created_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active        INT       DEFAULT 1
);
/*
Teacher ve assigns arasi - one to many
*/
INSERT INTO assignments (student_id, teacher_id, lesson_id, exam_result)
VALUES ((SELECT student_id FROM students WHERE student_name = 'Omar' AND student_surname = 'Ismayilov'),
        (SELECT teacher_id FROM teachers WHERE teacher_name = 'Samira' AND teacher_surname = 'Aliyeva'),
        (SELECT lesson_id FROM lessons WHERE lesson_name = 'Excel'),
        92.75);
select *
from assignments;

select st.student_name, assign.exam_result
from students st
         inner join assignments assign on st.student_id = assign.assignment_id;

SELECT exam_result AS neticeler_alias
FROM assignments;